name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Bump version
        id: version
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      
      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
      
      - name: Create tag
        run: |
          git tag "v${{ steps.version.outputs.version }}"
      
      - name: Push changes
        run: |
          git push origin main
          git push origin "v${{ steps.version.outputs.version }}"
      
      - name: Create Release PR
        uses: peter-evans/create-pull-request@v6
        with:
          title: "Release v${{ steps.version.outputs.version }}"
          body: |
            ## ðŸš€ Release v${{ steps.version.outputs.version }}
            
            This PR contains the version bump for the next release.
            
            ### Checklist
            - [ ] Update CHANGELOG.md
            - [ ] Review dependencies
            - [ ] Test installation flow
            
            Once merged, the release will be automatically published to NPM.
          branch: release/v${{ steps.version.outputs.version }}
          base: main